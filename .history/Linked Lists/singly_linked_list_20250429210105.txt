
class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def printList(self):
        if not self.head:
            print ""
        current_node = self.head
        while current_node:
            print (str(current_node.data) + " => ", end="")
            current_node = current_node.next
        print ("None")
    
    def insertNode(self, value, pos):
        new_node = Node(value)

        if pos == 0:
            new_node.next = self.head
            self.head = new_node
            return
        
        def getPrev(pos):
            current_node = self.head
            count = 1
            while (count < pos):
                current_node = current_node.next
                count +=1
            return current_node
        
        prev_node = getPrev(pos)
        temp_next = prev_node.next

        prev_node.next = new_node
        new_node.next=temp_next

    def deleteNode(self, value_to_delete):
        temp = self.head
        if not temp:
            return
        if temp.data == value_to_delete:
            self.head = temp.next
            temp.next = None
            return
        
        while temp.next.data != value_to_delete:
            temp = temp.next
        
        target_node = temp.next
        temp.next = target_node.next
        target_node.next = None

